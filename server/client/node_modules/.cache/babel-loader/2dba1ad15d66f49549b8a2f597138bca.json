{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-MERN-full-stack\\\\RMR\\\\RMR-courier-service-app\\\\server\\\\client\\\\src\\\\components\\\\profilecontrol\\\\userorders\\\\Userorders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Editorder from \"../editorder/Editorder\";\nimport \"./userorders.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Userorders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const id = localStorage.getItem(\"userId\");\n  const [myorder, setMyorder] = useState(false);\n  const [editid, setEditid] = useState(\"\");\n  const getorders = useCallback(async () => {\n    const res = await fetch(`http://localhost:5000/api/order/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json(); // console.log(\"User order by Id: \", data.userOrders.order);\n\n    setOrders(data.userOrders.order);\n  }, [id]);\n  useEffect(() => {\n    getorders();\n  }, [getorders]);\n\n  const Deleteorder = async id => {\n    const res = await fetch(`http://localhost:5000/api/order/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(\"area deleted order: \", data);\n    alert(data.message);\n  };\n\n  const deleteorder = id => {\n    Deleteorder(id);\n  };\n\n  const editorder = id => {\n    setMyorder(true);\n    setEditid(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-order-container\",\n        children: [!myorder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: orders.map((item, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-4 item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Place: \", item.city, \" City\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Area: \", item.area]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [\"Order Id: \", item._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Details Area : \", item.darea]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [\"Paid: $\", item.charge, \" BDD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parmission\",\n                children: item.status === \"panding\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => editorder(item._id),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"reject\",\n                    onClick: () => deleteorder(item._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), myorder && /*#__PURE__*/_jsxDEV(Editorder, {\n          setMyorder: setMyorder,\n          editid: editid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Userorders, \"j8X3Aod9xsEC+7iNLgun42q3Jz8=\");\n\n_c = Userorders;\nexport default Userorders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userorders\");","map":{"version":3,"sources":["E:/My-MERN-full-stack/RMR/RMR-courier-service-app/server/client/src/components/profilecontrol/userorders/Userorders.js"],"names":["React","useCallback","useEffect","useState","Editorder","Userorders","orders","setOrders","id","localStorage","getItem","myorder","setMyorder","editid","setEditid","getorders","res","fetch","method","headers","data","json","userOrders","order","Deleteorder","console","log","alert","message","deleteorder","editorder","map","item","key","type","status","city","area","_id","darea","charge"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Editorder from \"../editorder/Editorder\";\r\nimport \"./userorders.scss\";\r\nconst Userorders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const id = localStorage.getItem(\"userId\");\r\n  const [myorder, setMyorder] = useState(false);\r\n  const [editid, setEditid] = useState(\"\");\r\n  const getorders = useCallback(async () => {\r\n    const res = await fetch(`http://localhost:5000/api/order/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    // console.log(\"User order by Id: \", data.userOrders.order);\r\n    setOrders(data.userOrders.order);\r\n  }, [id]);\r\n  useEffect(() => {\r\n    getorders();\r\n  }, [getorders]);\r\n\r\n  const Deleteorder = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/api/order/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    console.log(\"area deleted order: \", data);\r\n    alert(data.message);\r\n  };\r\n  const deleteorder = (id) => {\r\n    Deleteorder(id);\r\n  };\r\n  const editorder = (id) => {\r\n    setMyorder(true);\r\n    setEditid(id);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"user-order-container\">\r\n          {!myorder && (\r\n            <div className=\"row\">\r\n              {/*start*/}\r\n              {orders.map((item, key) => {\r\n                return (\r\n                  <div className=\"col-lg-4 item\" key={key}>\r\n                    <h2>{item.type}</h2>\r\n                    <h3>{item.status}</h3>\r\n                    <h4>Place: {item.city} City</h4>\r\n                    <h5>Area: {item.area}</h5>\r\n                    <h6>Order Id: {item._id}</h6>\r\n                    <p>Details Area : {item.darea}</p>\r\n                    <h6>Paid: ${item.charge} BDD</h6>\r\n                    <div className=\"parmission\">\r\n                      {item.status === \"panding\" && (\r\n                        <>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => editorder(item._id)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"reject\"\r\n                            onClick={() => deleteorder(item._id)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              {/*end*/}\r\n            </div>\r\n          )}\r\n          {myorder && <Editorder setMyorder={setMyorder} editid={editid} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Userorders;\r\n"]},"metadata":{},"sourceType":"module"}