{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-MERN-full-stack\\\\RMR\\\\RMR-courier-service-app\\\\server\\\\client\\\\src\\\\components\\\\profilecontrol\\\\areas\\\\Area.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DeleteForeverOutlined } from \"@material-ui/icons\";\nimport InsertArea from \"./areacontroler/insertarea/InsertArea\";\nimport FindArea from \"./areacontroler/findarea/FindArea\";\nimport \"./area.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Area = () => {\n  _s();\n\n  const [inarea, setInarea] = useState(false);\n  const [farea, setFarea] = useState(false);\n  const [allareas, setAllarea] = useState([]);\n  console.log(allareas);\n\n  const getAllarea = async () => {\n    const res = await fetch(\"http://localhost:5000/api/area/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    setAllarea(data.citys); // console.log(data.citys);\n  };\n\n  useEffect(() => {\n    getAllarea();\n  }, []);\n\n  const controlarea = area => {\n    switch (area) {\n      case \"insert\":\n        setInarea(true);\n        setFarea(false);\n        break;\n\n      case \"findone\":\n        setInarea(false);\n        setFarea(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const Deletearea = async id => {\n    const res = await fetch(`http://localhost:5000/api/area/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(\"get delete area: \", data);\n    alert(data.message);\n  };\n\n  const deletearea = id => {\n    Deletearea(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area-control-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => controlarea(\"insert\"),\n          children: \"Insert New Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => controlarea(\"findone\"),\n          children: \"Find spacific area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area-control\",\n        children: [inarea && /*#__PURE__*/_jsxDEV(InsertArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this), farea && /*#__PURE__*/_jsxDEV(FindArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-all-area\",\n        children: allareas.map((city, k) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"area-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"area-name\",\n                children: city.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"area-status\",\n                children: city.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"delete-area\",\n                onClick: () => deletearea(city._id),\n                children: /*#__PURE__*/_jsxDEV(DeleteForeverOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Area, \"X6kMu8BTRAlrCHvZdDGKUAtNazk=\");\n\n_c = Area;\nexport default Area;\n\nvar _c;\n\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"sources":["E:/My-MERN-full-stack/RMR/RMR-courier-service-app/server/client/src/components/profilecontrol/areas/Area.js"],"names":["React","useEffect","useState","DeleteForeverOutlined","InsertArea","FindArea","Area","inarea","setInarea","farea","setFarea","allareas","setAllarea","console","log","getAllarea","res","fetch","method","headers","data","json","citys","controlarea","area","Deletearea","id","alert","message","deletearea","map","city","k","name","status","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAO,aAAP;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAMI,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFgD,KAApC,CAAvB;AAMA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAT,IAAAA,UAAU,CAACQ,IAAI,CAACE,KAAN,CAAV,CAR6B,CAS7B;AACD,GAVD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,WAAW,GAAIC,IAAD,IAAU;AAC5B,YAAQA,IAAR;AACE,WAAK,QAAL;AACEhB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACA;;AACF,WAAK,SAAL;AACEF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;;AAEF;AACE;AAXJ;AAaD,GAdD;;AAeA,QAAMe,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMV,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiCS,EAAG,EAAtC,EAAyC;AAC9DR,MAAAA,MAAM,EAAE,QADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFqD,KAAzC,CAAvB;AAMA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,IAAjC;AACAO,IAAAA,KAAK,CAACP,IAAI,CAACQ,OAAN,CAAL;AACD,GAVD;;AAWA,QAAMC,UAAU,GAAIH,EAAD,IAAQ;AACzBD,IAAAA,UAAU,CAACC,EAAD,CAAV;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAMH,WAAW,CAAC,QAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,SAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBACGhB,MAAM,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADb,EAEGE,KAAK,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACGE,QAAQ,CAACmB,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,WAAd;AAAA,0BAA2BD,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAAA,0BAA6BF,IAAI,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,sBAHF,eAKE;AACE,gBAAA,SAAS,EAAC,aADZ;AAEE,gBAAA,OAAO,EAAE,MAAML,UAAU,CAACE,IAAI,CAACI,GAAN,CAF3B;AAAA,uCAIE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAgBD,SAjBA;AADH;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwCD,CA3FD;;GAAM7B,I;;KAAAA,I;AA6FN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { DeleteForeverOutlined } from \"@material-ui/icons\";\r\nimport InsertArea from \"./areacontroler/insertarea/InsertArea\";\r\nimport FindArea from \"./areacontroler/findarea/FindArea\";\r\nimport \"./area.scss\";\r\nconst Area = () => {\r\n  const [inarea, setInarea] = useState(false);\r\n  const [farea, setFarea] = useState(false);\r\n  const [allareas, setAllarea] = useState([]);\r\n\r\n  console.log(allareas);\r\n  const getAllarea = async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/area/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    setAllarea(data.citys);\r\n    // console.log(data.citys);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllarea();\r\n  }, []);\r\n\r\n  const controlarea = (area) => {\r\n    switch (area) {\r\n      case \"insert\":\r\n        setInarea(true);\r\n        setFarea(false);\r\n        break;\r\n      case \"findone\":\r\n        setInarea(false);\r\n        setFarea(true);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const Deletearea = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/api/area/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    console.log(\"get delete area: \", data);\r\n    alert(data.message);\r\n  };\r\n  const deletearea = (id) => {\r\n    Deletearea(id);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"area-container\">\r\n        <div className=\"area-control-buttons\">\r\n          <button type=\"button\" onClick={() => controlarea(\"insert\")}>\r\n            Insert New Area\r\n          </button>\r\n          <button type=\"button\" onClick={() => controlarea(\"findone\")}>\r\n            Find spacific area\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"area-control\">\r\n          {inarea && <InsertArea />}\r\n          {farea && <FindArea />}\r\n        </div>\r\n\r\n        <div className=\"show-all-area\">\r\n          {allareas.map((city, k) => {\r\n            return (\r\n              <>\r\n                <div className=\"area-box\">\r\n                  <h3 className=\"area-name\">{city.name}</h3>\r\n\r\n                  <h5 className=\"area-status\">{city.status}</h5>\r\n\r\n                  <div\r\n                    className=\"delete-area\"\r\n                    onClick={() => deletearea(city._id)}\r\n                  >\r\n                    <DeleteForeverOutlined />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Area;\r\n"]},"metadata":{},"sourceType":"module"}