{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-MERN-full-stack\\\\RMR\\\\RMR-courier-service-app\\\\server\\\\client\\\\src\\\\components\\\\Portal\\\\Portal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { VisibilitySharp, VisibilityOffSharp } from \"@material-ui/icons\";\nimport \"./portal.scss\";\nimport Nav from \"../header/nav/Nav\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Portal = _ref => {\n  _s();\n\n  let {\n    portaltoapp\n  } = _ref;\n  const [istrue, setIstrue] = useState(true);\n  const [visible, setVisible] = useState(false);\n  const [userdata, setUserData] = useState([]);\n  const navigate = useNavigate();\n  const [input, setInput] = useState({\n    name: \"admin\",\n    email: \"admin@gmail.com\",\n    password: \"admin\"\n  });\n\n  const handlerChange = e => {\n    setInput(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (istrue) {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: input.email,\n            password: input.password\n          })\n        });\n        const data = await response.json();\n        localStorage.setItem(\"userId\", data.user._id);\n        setUserData(data);\n        portaltoapp(data);\n        alert(\"login successfull\");\n        navigate(\"/profile\");\n      } catch (e) {\n        alert(\"authentication problem.  \", e);\n      }\n    } else {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: input.name,\n            email: input.email,\n            password: input.password\n          })\n        });\n        const data = await response.json();\n        setUserData(data.user);\n        navigate(\"/portal\");\n\n        if (data.exist) {\n          alert(data.exist);\n        } else {\n          alert(\"registration seccessfull login please\");\n        }\n      } catch (e) {\n        alert(\"Regisration faild. \", e);\n      }\n    }\n  }\n\n  console.log(\"user: \", userdata);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-portal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: () => setIstrue(true),\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: () => setIstrue(false),\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [!istrue && /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            value: input.name,\n            placeholder: \"Enter Name\",\n            onChange: handlerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            value: input.email,\n            placeholder: \"Enter Email\",\n            onChange: handlerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-pass\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: visible ? \"text\" : \"password\",\n              value: input.password,\n              placeholder: \"Enter password\",\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setVisible(!visible),\n              children: visible ? /*#__PURE__*/_jsxDEV(VisibilitySharp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 28\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffSharp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: istrue ? \"LogIn\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Portal, \"a7okFnRLepzoL1IR2yi+eINJDvU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Portal;\nexport default Portal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"sources":["E:/My-MERN-full-stack/RMR/RMR-courier-service-app/server/client/src/components/Portal/Portal.js"],"names":["React","useState","VisibilitySharp","VisibilityOffSharp","Nav","useNavigate","Portal","portaltoapp","istrue","setIstrue","visible","setVisible","userdata","setUserData","navigate","input","setInput","name","email","password","handlerChange","e","prevState","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","user","_id","alert","exist","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { VisibilitySharp, VisibilityOffSharp } from \"@material-ui/icons\";\r\nimport \"./portal.scss\";\r\nimport Nav from \"../header/nav/Nav\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Portal = ({ portaltoapp }) => {\r\n  const [istrue, setIstrue] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [userdata, setUserData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [input, setInput] = useState({\r\n    name: \"admin\",\r\n    email: \"admin@gmail.com\",\r\n    password: \"admin\",\r\n  });\r\n\r\n  const handlerChange = (e) => {\r\n    setInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (istrue) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: input.email,\r\n            password: input.password,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        localStorage.setItem(\"userId\", data.user._id);\r\n        setUserData(data);\r\n        portaltoapp(data);\r\n        alert(\"login successfull\");\r\n        navigate(\"/profile\");\r\n      } catch (e) {\r\n        alert(\"authentication problem.  \", e);\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            name: input.name,\r\n            email: input.email,\r\n            password: input.password,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        setUserData(data.user);\r\n        navigate(\"/portal\");\r\n        if (data.exist) {\r\n          alert(data.exist);\r\n        } else {\r\n          alert(\"registration seccessfull login please\");\r\n        }\r\n      } catch (e) {\r\n        alert(\"Regisration faild. \", e);\r\n      }\r\n    }\r\n  }\r\n  console.log(\"user: \", userdata);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Nav />\r\n      </div>\r\n      <div className=\"main-portal-container\">\r\n        <div className=\"portal-container\">\r\n          <div className=\"option\">\r\n            <h1 onClick={() => setIstrue(true)}>LOGIN</h1>\r\n            <h1 onClick={() => setIstrue(false)}>REGISTER</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            {!istrue && (\r\n              <input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={input.name}\r\n                placeholder=\"Enter Name\"\r\n                onChange={handlerChange}\r\n              />\r\n            )}\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={input.email}\r\n              placeholder=\"Enter Email\"\r\n              onChange={handlerChange}\r\n            />\r\n            <span className=\"input-pass\">\r\n              <input\r\n                name=\"password\"\r\n                type={visible ? \"text\" : \"password\"}\r\n                value={input.password}\r\n                placeholder=\"Enter password\"\r\n                onChange={handlerChange}\r\n              />\r\n              <div onClick={() => setVisible(!visible)}>\r\n                {visible ? <VisibilitySharp /> : <VisibilityOffSharp />}\r\n              </div>\r\n            </span>\r\n\r\n            <button type=\"submit\">{istrue ? \"LogIn\" : \"Register\"}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n"]},"metadata":{},"sourceType":"module"}