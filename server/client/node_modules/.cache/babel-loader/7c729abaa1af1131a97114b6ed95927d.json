{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-MERN-full-stack\\\\RMR\\\\RMR-courier-service-app\\\\server\\\\client\\\\src\\\\components\\\\profilecontrol\\\\editorder\\\\Editorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"./editorder.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Editorder = _ref => {\n  _s();\n\n  let {\n    setMyorder,\n    editid\n  } = _ref;\n  const [incity, setIncity] = useState(true);\n  const [value, setValue] = useState(\" \");\n  const [arrvlaue, setArrvalue] = useState(\"\");\n  const [arrvlaue2, setArrvalue2] = useState(\"\"); //new job\n\n  const [ptype, setPtype] = useState(\"\");\n  const [arearoll, setArearoll] = useState(\"\");\n  const [area, setArea] = useState([]);\n  const [darea, setDarea] = useState(\"\");\n  console.log(\"arearoll: \", arearoll);\n  const fdata = useCallback(async () => {\n    if (incity) {\n      const res = await fetch(\"http://localhost:5000/api/area/in\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setArea(data.inareas);\n    } else {\n      const res = await fetch(\"http://localhost:5000/api/area/out\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setArea(data.outareas);\n    }\n  }, [incity]);\n  useEffect(() => {\n    fdata();\n  }, [fdata]);\n  useEffect(() => {\n    if (incity) {\n      setDarea(arrvlaue);\n    } else {\n      setDarea(arrvlaue2);\n    }\n  }, [arrvlaue, arrvlaue2, incity]);\n\n  const InCity = () => {\n    setIncity(true);\n    setArearoll(\"in\");\n  };\n\n  const OutCity = () => {\n    setIncity(false);\n    setArearoll(\"out\");\n  };\n\n  let orderSubmit;\n\n  try {\n    orderSubmit = async e => {\n      e.preventDefault();\n      const res = await fetch(`http://localhost:5000/api/order/${editid}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: ptype,\n          city: arearoll,\n          area: value,\n          darea: darea\n        })\n      });\n      const data = await res.json();\n      console.log(\"dalivery order: \", data);\n      alert(\"order Updated successfully\");\n      setMyorder(false);\n    };\n  } catch (e) {\n    alert(\"Some details missing please check again and fill all the filds correctly. \", e);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"place-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PLACE YOUR DALIVARY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: orderSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Product Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Grocery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"item\",\n            value: \"Grocery\",\n            onChange: e => setPtype(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Electronics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"item\",\n            value: \"Electronics\",\n            onChange: e => setPtype(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Madicne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"item\",\n            value: \"Madicne\",\n            onChange: e => setPtype(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Foods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"item\",\n            value: \"Foods\",\n            onChange: e => setPtype(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"item\",\n            value: \"Documents\",\n            onChange: e => setPtype(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"destination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: InCity,\n            children: \"In City Dhaka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: OutCity,\n            children: \"Out City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), incity && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Select Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setValue(e.target.value),\n            children: area.map((option, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.name,\n              children: option.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), value !== \" \" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incity-address\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: arrvlaue,\n              rows: \"2\",\n              cols: \"50\",\n              onChange: e => setArrvalue(e.target.value),\n              placeholder: `Enter exect location like road no and house no and more of ${value}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this) : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), !incity && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Select Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setValue(e.target.value),\n            children: area.map((option, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.name,\n              children: option.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), value !== \" \" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incity-address\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: arrvlaue2,\n              rows: \"5\",\n              cols: \"50\",\n              onChange: e => setArrvalue2(e.target.value),\n              placeholder: `Enter exect location of ${value}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this) : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Editorder, \"IobeY7LzMHNchK+HNRvaqxREh3c=\");\n\n_c = Editorder;\nexport default Editorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editorder\");","map":{"version":3,"sources":["E:/My-MERN-full-stack/RMR/RMR-courier-service-app/server/client/src/components/profilecontrol/editorder/Editorder.js"],"names":["React","useCallback","useEffect","useState","Editorder","setMyorder","editid","incity","setIncity","value","setValue","arrvlaue","setArrvalue","arrvlaue2","setArrvalue2","ptype","setPtype","arearoll","setArearoll","area","setArea","darea","setDarea","console","log","fdata","res","fetch","method","headers","data","json","inareas","outareas","InCity","OutCity","orderSubmit","e","preventDefault","body","JSON","stringify","type","city","alert","target","map","option","key","name"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./editorder.scss\";\r\nconst Editorder = ({ setMyorder, editid }) => {\r\n  const [incity, setIncity] = useState(true);\r\n  const [value, setValue] = useState(\" \");\r\n  const [arrvlaue, setArrvalue] = useState(\"\");\r\n  const [arrvlaue2, setArrvalue2] = useState(\"\");\r\n\r\n  //new job\r\n  const [ptype, setPtype] = useState(\"\");\r\n  const [arearoll, setArearoll] = useState(\"\");\r\n  const [area, setArea] = useState([]);\r\n  const [darea, setDarea] = useState(\"\");\r\n\r\n  console.log(\"arearoll: \", arearoll);\r\n\r\n  const fdata = useCallback(async () => {\r\n    if (incity) {\r\n      const res = await fetch(\"http://localhost:5000/api/area/in\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setArea(data.inareas);\r\n    } else {\r\n      const res = await fetch(\"http://localhost:5000/api/area/out\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setArea(data.outareas);\r\n    }\r\n  }, [incity]);\r\n\r\n  useEffect(() => {\r\n    fdata();\r\n  }, [fdata]);\r\n\r\n  useEffect(() => {\r\n    if (incity) {\r\n      setDarea(arrvlaue);\r\n    } else {\r\n      setDarea(arrvlaue2);\r\n    }\r\n  }, [arrvlaue, arrvlaue2, incity]);\r\n\r\n  const InCity = () => {\r\n    setIncity(true);\r\n    setArearoll(\"in\");\r\n  };\r\n  const OutCity = () => {\r\n    setIncity(false);\r\n    setArearoll(\"out\");\r\n  };\r\n  let orderSubmit;\r\n  try {\r\n    orderSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const res = await fetch(`http://localhost:5000/api/order/${editid}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          type: ptype,\r\n          city: arearoll,\r\n          area: value,\r\n          darea: darea,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      console.log(\"dalivery order: \", data);\r\n      alert(\"order Updated successfully\");\r\n      setMyorder(false);\r\n    };\r\n  } catch (e) {\r\n    alert(\r\n      \"Some details missing please check again and fill all the filds correctly. \",\r\n      e\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"place-container\">\r\n        <h1>PLACE YOUR DALIVARY</h1>\r\n        <form onSubmit={orderSubmit}>\r\n          <h2>Select Product Type</h2>\r\n          <div className=\"product-type\">\r\n            <label for=\"name\">Grocery</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"item\"\r\n              value=\"Grocery\"\r\n              onChange={(e) => setPtype(e.target.value)}\r\n            />\r\n            <label for=\"name\">Electronics</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"item\"\r\n              value=\"Electronics\"\r\n              onChange={(e) => setPtype(e.target.value)}\r\n            />\r\n            <label for=\"name\">Madicne</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"item\"\r\n              value=\"Madicne\"\r\n              onChange={(e) => setPtype(e.target.value)}\r\n            />\r\n            <label for=\"name\">Foods</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"item\"\r\n              value=\"Foods\"\r\n              onChange={(e) => setPtype(e.target.value)}\r\n            />\r\n            <label for=\"name\">Documents</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"item\"\r\n              value=\"Documents\"\r\n              onChange={(e) => setPtype(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"destination\">\r\n            <button type=\"button\" onClick={InCity}>\r\n              In City Dhaka\r\n            </button>\r\n            <button type=\"button\" onClick={OutCity}>\r\n              Out City\r\n            </button>\r\n          </div>\r\n          {incity && (\r\n            <div className=\"select-area\">\r\n              <h5>Select Area</h5>\r\n              <select onChange={(e) => setValue(e.target.value)}>\r\n                {area.map((option, key) => (\r\n                  <option key={key} value={option.name}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {value !== \" \" ? (\r\n                <div className=\"incity-address\">\r\n                  <textarea\r\n                    value={arrvlaue}\r\n                    rows=\"2\"\r\n                    cols=\"50\"\r\n                    onChange={(e) => setArrvalue(e.target.value)}\r\n                    placeholder={`Enter exect location like road no and house no and more of ${value}`}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n            </div>\r\n          )}\r\n          {!incity && (\r\n            <div className=\"select-area\">\r\n              <h5>Select Area</h5>\r\n              <select onChange={(e) => setValue(e.target.value)}>\r\n                {area.map((option, key) => (\r\n                  <option key={key} value={option.name}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {value !== \" \" ? (\r\n                <div className=\"incity-address\">\r\n                  <textarea\r\n                    value={arrvlaue2}\r\n                    rows=\"5\"\r\n                    cols=\"50\"\r\n                    onChange={(e) => setArrvalue2(e.target.value)}\r\n                    placeholder={`Enter exect location of ${value}`}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\">Update Now</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editorder;\r\n"]},"metadata":{},"sourceType":"module"}