{"ast":null,"code":"var _jsxFileName = \"E:\\\\My-MERN-full-stack\\\\RMR\\\\RMR-courier-service-app\\\\server\\\\client\\\\src\\\\components\\\\profilecontrol\\\\editprofile\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"./edit.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Edit = _ref => {\n  _s();\n\n  let {\n    userId,\n    hasid\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  console.log(\"Edit user me: \", userId);\n  console.log(\"Edit user has me: \", hasid); //get default items first for edit\n\n  const getuserbyid1 = useCallback(async () => {\n    const res = await fetch(\"http://localhost:5000/api/user/id\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: userId\n      })\n    });\n    const data = await res.json();\n    console.log(\"spacific user: \", data);\n    setName(data.user.name);\n    setEmail(data.user.email);\n  }, [userId]);\n  const getuserbyid2 = useCallback(async () => {\n    const res = await fetch(\"http://localhost:5000/api/user/id\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: hasid\n      })\n    });\n    const data = await res.json();\n    console.log(\"spacific user: \", data);\n    setName(data.user.name);\n    setEmail(data.user.email);\n  }, [hasid]);\n  useEffect(() => {\n    if (!userId) {\n      getuserbyid2();\n      setId(hasid);\n    } else {\n      getuserbyid1();\n      setId(userId);\n    }\n  }, [hasid, userId, getuserbyid1, getuserbyid2]);\n\n  const Updateuser = async () => {\n    // const id = localStorage.getItem(\"userId\");\n    const res = await fetch(`http://localhost:5000/api/user/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    });\n    const data = await res.json();\n    console.log(\"updated data: \", data);\n    alert(data.message);\n  };\n\n  const updateuser = e => {\n    e.preventDefault();\n    Updateuser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit and Update your profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateuser,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            placeholder: \"Enter New Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"Enter New Email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Edit, \"AU/UbSz6MAExQ799+t4edfVqvk0=\");\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/My-MERN-full-stack/RMR/RMR-courier-service-app/server/client/src/components/profilecontrol/editprofile/Edit.js"],"names":["React","useCallback","useEffect","useState","Edit","userId","hasid","name","setName","email","setEmail","id","setId","console","log","getuserbyid1","res","fetch","method","headers","body","JSON","stringify","data","json","user","getuserbyid2","Updateuser","alert","message","updateuser","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport \"./edit.scss\";\r\nconst Edit = ({ userId, hasid }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  console.log(\"Edit user me: \", userId);\r\n  console.log(\"Edit user has me: \", hasid);\r\n  //get default items first for edit\r\n  const getuserbyid1 = useCallback(async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/user/id\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: userId,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(\"spacific user: \", data);\r\n    setName(data.user.name);\r\n    setEmail(data.user.email);\r\n  }, [userId]);\r\n  const getuserbyid2 = useCallback(async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/user/id\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: hasid,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(\"spacific user: \", data);\r\n    setName(data.user.name);\r\n    setEmail(data.user.email);\r\n  }, [hasid]);\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      getuserbyid2();\r\n      setId(hasid);\r\n    } else {\r\n      getuserbyid1();\r\n      setId(userId);\r\n    }\r\n  }, [hasid, userId, getuserbyid1, getuserbyid2]);\r\n\r\n  const Updateuser = async () => {\r\n    // const id = localStorage.getItem(\"userId\");\r\n    const res = await fetch(`http://localhost:5000/api/user/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(\"updated data: \", data);\r\n    alert(data.message);\r\n  };\r\n\r\n  const updateuser = (e) => {\r\n    e.preventDefault();\r\n    Updateuser();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edit-container\">\r\n        <div className=\"edit\">\r\n          <h1>Edit and Update your profile</h1>\r\n          <form onSubmit={updateuser}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter New Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter New Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Update</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}